---
- name: Get aws metadata
  include_tasks: aws.yaml
  when: cloud == "aws"

- name: Get azure metadata
  include_tasks: azure.yaml
  when: cloud == "azure"

- name: Get gcp metadata
  include_tasks: gcp.yaml
  when: cloud == "gcp"

- name: Get metadata for aws, otherwise azure
  block:
  - name: Get aws metadata
    include_tasks: aws.yaml
  rescue:
  - name: Get azure metadata
    include_tasks: azure.yaml
  when: not cloud

- name: Show instance metadata
  debug:
    msg: "{{ instance_id }} in {{ instance_region }}"
    verbosity: 1

- name: Check for existing rule
  uri:
    url: https://{{ harness_url }}/gateway/lw/api/accounts/{{ harness_account_id }}/autostopping/rules/list?routingId={{ harness_account_id }}&accountIdentifier={{ harness_account_id }}
    method: POST
    headers:
      x-api-key: "{{ harness_platform_api_key }}"
    body_format: json
    body:
      query: "{{ instance_id }}"
      limit: 1
  register: existing_rule

- name: Found existing rule
  block:
  - set_fact:
      host_name: "{{ existing_rule.json.response.records[0].host_name }}"
  - name: Show existing rule
    debug:
      msg: "https://{{ harness_url }}/ng/account/{{ harness_account_id }}/module/ce/autostopping-rules/rule/{{ existing_rule.json.response.records[0].id }}"
  when: existing_rule.json.response.total != 0

- name: Creating new rule
  block:
  - name: Create an autostopping rule
    include_tasks: new_rule.yaml
  - set_fact:
      host_name: "{{ new_rule.json.response.host_name }}"
  - name: Show new rule
    debug:
      msg: "https://{{ harness_url }}/ng/account/{{ harness_account_id }}/module/ce/autostopping-rules/rule/{{ new_rule.json.response.id }}"
  when: existing_rule.json.response.total == 0

- name: Create lightwing directory
  file: 
    state: directory
    path: /etc/lightwing
    owner: root
    group: root

- name: Copy ecg config file
  template: 
    src: ecg.toml.j2
    dest: /etc/lightwing/ecg.toml
    owner: root

- name: Download ecg
  get_url:
    url: https://lightwing-downloads-temp.s3.ap-south-1.amazonaws.com/ecg/ecg_{{ ecg_version }}_{{ ecg_platform }}.zip
    dest: /etc/lightwing/ecg_{{ ecg_version }}_{{ ecg_platform }}.zip
    mode: '0400'

- name: Install unzip
  package:
    name: zip
    state: present

- name: Extract ecg
  unarchive:
    remote_src: yes
    src: /etc/lightwing/ecg_{{ ecg_version }}_{{ ecg_platform }}.zip
    dest: /etc/lightwing

- name: Copy ecg
  copy:
    remote_src: yes
    src: /etc/lightwing/ecg_{{ ecg_version }}_{{ ecg_platform }}/ecg
    dest: /usr/local/bin/
    mode: '0700'

- name: Copy ecg service file
  template: 
    src: ecg.service.j2
    dest: /etc/systemd/system/ecg.service
    owner: root

- name: Enable ecg
  systemd:
    daemon_reload: true
    enabled: yes
    state: restarted
    name: ecg
